name: Deploy to AWS EC2
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  REGISTRY: eazyevent
  REPOSITORY: eazy-event-management-ui

jobs:
  Build:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Get the previous tag
      - name: Get previous tag
        id: previous_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      # Set the new version by incrementing the patch version
      - name: Set new version
        id: new_version
        run: |
          previous_tag=${{ steps.previous_tag.outputs.tag }}
          if [ -z "$previous_tag" ]; then
            # No previous tag, start at 1.0.0
            new_version="1.0.0"
          else
            # Increment the patch version
            IFS='.' read -r -a parts <<< "$previous_tag"
            parts[2]=$((parts[2] + 1))  # Increment the patch
            new_version="${parts[0]}.${parts[1]}.${parts[2]}"
          fi
          echo "::set-output name=version::$new_version"

      - name: Login to docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and publish image to Docker Hub
        env:
          REGISTRY: ${{ env.REGISTRY }}
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ steps.new_version.outputs.version }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  DevelopmentDeploy:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: Build
    environment: Dev
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        env:
          REGISTRY: ${{ env.REGISTRY }}
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: ap-south-1
          PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_DEV }}
          SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY_DEV }}
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_DEFAULT_REGION,AWS_REGION
          script: |
            sudo yum update
            sudo yum install -y docker
            sudo yum install awscli -y
            sudo service docker start
            sudo usermod -aG docker ec2-user  # Add ec2-user to the docker group to avoid needing sudo for docker commands
            sudo docker image prune -af
            sudo docker rm -f eazy-event-management-ui-container
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker rm -f eazy-event-management-ui-container
            docker run -d -p 80:80 --name eazy-event-management-ui-container \
            -e REACT_APP_ENV=${{ vars.REACT_APP_ENV }} \
            -e PUBLIC_IP=${{ secrets.AWS_PUBLIC_KEY_DEV }} \
            $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker image prune -af

  ProductionDeploy:
    name: Deploy to production
    needs: DevelopmentDeploy
    runs-on: [ubuntu-latest]
    environment:
      name: Production
      url: "https://eazy-event.com"
    permissions:
      deployments: write
      issues: write
    steps:
      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: Saravananslb
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "Please approve or deny the deployment of version v1.3.5."
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ""
          additional-denied-words: ""
      - name: Deploy Docker image to EC2
        env:
          REGISTRY: ${{ env.REGISTRY }}
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: ap-south-1
          PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
          SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ec2-user
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_DEFAULT_REGION,AWS_REGION
          script: |
            sudo yum update
            sudo yum install -y docker
            sudo yum install awscli -y
            sudo service docker start
            sudo usermod -aG docker ec2-user  # Add ec2-user to the docker group to avoid needing sudo for docker commands
            sudo docker image prune -af
            sudo docker rm -f eazy-event-management-ui-container
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker rm -f eazy-event-management-ui-container
            docker run -d -p 80:80 --name eazy-event-management-ui-container \
            -e REACT_APP_ENV=${{ vars.REACT_APP_ENV }} \
            -e PUBLIC_IP=${{ secrets.AWS_PUBLIC_KEY }} \
            $REGISTRY/$REPOSITORY:$IMAGE_TAG
            docker image prune -af
